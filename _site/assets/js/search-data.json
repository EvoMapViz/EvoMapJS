{"0": {
    "doc": "arrow.json",
    "title": "arrows.json",
    "content": " ",
    "url": "/docs/data_details/arrows/#arrowsjson",
    
    "relUrl": "/docs/data_details/arrows/#arrowsjson"
  },"1": {
    "doc": "arrow.json",
    "title": "Key-value pairs",
    "content": "Required . name : The name of the arrow as it will be displayed in the app &gt;(also serves as a technical identifier inside the code). | Acceptable: Any string. | . x : The x-coordinate of the arrow’s head. | Acceptable: Any number. | By default, all arrows tails are placed x = 0. | . y : The y-coordinate of the arrow’s head. | Acceptable: Any number. | By default, all arrows tails are placed at y = 0. | . time : The time at which the arrow’s head is located. | Acceptable: Any number in the range of time periods included in circle.json. | . Support for missing time periods has not been tested. For each arrow identified in arrows.json, it is safest to provide x and y coordinates for all time periods included in circle.json. ",
    "url": "/docs/data_details/arrows/#key-value-pairs",
    
    "relUrl": "/docs/data_details/arrows/#key-value-pairs"
  },"2": {
    "doc": "arrow.json",
    "title": "Prototype of valid format",
    "content": "[ { \"name\": \"FACTOR 1\", \"x\": 6.4079211884, \"y\": 13.0098593574, \"time\": 1998 }, { \"name\": \"FACTOR 1\", \"x\": 6.4444474746, \"y\": 13.0361878325, \"time\": 1999 }, { \"name\": \"FACTOR 1\", \"x\": 6.4658528654, \"y\": 13.0025843621, \"time\": 2000 } ] . For a full example of the data format, see url https://github.com/EvoMapViz/EvoMapJS/blob/main/src/data/arrows_TEMPLATE_DO_NOT_ERASE.json in this repository. | This is reference template that should not be erased. You should copy it, rename it to arrows.json, and experiment editing the latter with your own data (you can always revert to the template if you break the data format and want a fresh start). | . ",
    "url": "/docs/data_details/arrows/#prototype-of-valid-format",
    
    "relUrl": "/docs/data_details/arrows/#prototype-of-valid-format"
  },"3": {
    "doc": "arrow.json",
    "title": "arrow.json",
    "content": " ",
    "url": "/docs/data_details/arrows/",
    
    "relUrl": "/docs/data_details/arrows/"
  },"4": {
    "doc": "circles.json",
    "title": "circles.json",
    "content": " ",
    "url": "/docs/data_details/circle/",
    
    "relUrl": "/docs/data_details/circle/"
  },"5": {
    "doc": "circles.json",
    "title": "Key-value pairs (each row)",
    "content": "Required . name : the name of the unit corresponding to the observation. | Acceptable: Any string. | . time : the time period for the observation. | Acceptable: Any integer. | . x : the x coordinate of the unit at time. | Acceptable: Any number. | . y : the y coordinate of the unit at time. | Acceptable: Any number. | . Optional . continuous_feature_1 : a continuous feature of the unit at time. | Acceptable: Any string or number. | . ⋮ . continuous_feature_c : a continuous feature of the unit at time. | Acceptable: Any string or number. | . discrete_feature_1 : a discrete feature of the unit at time. | Acceptable: Any string or number. | . ⋮ . discrete_feature_d : a discrete feature of the unit at time. | Acceptable: Any string or number. | . ",
    "url": "/docs/data_details/circle/#key-value-pairs-each-row",
    
    "relUrl": "/docs/data_details/circle/#key-value-pairs-each-row"
  },"6": {
    "doc": "circles.json",
    "title": "Further requirements and info",
    "content": ". | Each row must contain the full exact same set of keys, including at least one continuous feature (on top of the required name, time, x, and y keys). | Whether a feature is considered “continuous” or “discrete” is specified through metadata.json. | Features marked as “continuous” in metadata.json must be numerical. | Features marked as “discrete” in metadata.json will be treated as categorical, even if they are supplied in a numerical format. | Inconsistent types for “discrete” features has not been tested. It’s safest to have a single discrete feature be either all strings or all numericals across all rows. | . | . | Missing time periods are allowed and are signaled by the complete absence of an row for that time period. | As indicated above, each object must contain the exact same set of keys.The app does not allow for “partially missing” time periods whereby a row features missing keys or keys otherwise marked as NA, NaN, null,…. | . | The order of rows and key-value pairs within rows is irrelevant. | . ",
    "url": "/docs/data_details/circle/#further-requirements-and-info",
    
    "relUrl": "/docs/data_details/circle/#further-requirements-and-info"
  },"7": {
    "doc": "circles.json",
    "title": "Prototype of valid format",
    "content": "[ {\"name\":\"1ST SOURCE CORP\",\"time\":1998,\"mkvalt\":0.58,\"sic_code\":\"60\",\"x\":6.4079211884,\"y\":13.0098593574,\"cluster\":8,\"sic_code_label\":\"Depository Institutions\",\"cluster_label\":\"Banking\"}, {\"name\":\"1ST SOURCE CORP\",\"time\":1999,\"mkvalt\":0.48,\"sic_code\":\"60\",\"x\":6.4444474746,\"y\":13.0361878325,\"cluster\":8,\"sic_code_label\":\"Depository Institutions\",\"cluster_label\":\"Banking\"}, {\"name\":\"PIONEER NATURAL RESOURCES CO\",\"time\":2000,\"mkvalt\":1.94,\"rank\":288.0,\"sic_code\":\"13\",\"x\":6.8169413341,\"y\":3.6371516382,\"cluster\":4,\"sic_code_label\":\"Oil and Gas Extraction\",\"cluster_label\":\"Oil, Energy and Utilities\"}, {\"time\":1999, \"name\":\"PIONEER NATURAL RESOURCES CO\", \"mkvalt\":0.9,\"rank\":417.0,\"sic_code\":\"13\",\"x\":6.8474968473,\"y\":3.6536847176,\"cluster\":4,\"sic_code_label\":\"Oil and Gas Extraction\",\"cluster_label\":\"Oil, Energy and Utilities\"} ] . For a full example of the data format, see https://github.com/EvoMapViz/EvoMapJS/blob/main/src/data/circles_TEMPLATE_DO_NOT_ERASE.json in this repository. | This is a reference template that should not be erased. You should copy it, rename it to circles.json, and experiment with editing the latter with your own data (you can always revert to the template if you break the data format and want a fresh start). | . ",
    "url": "/docs/data_details/circle/#prototype-of-valid-format",
    
    "relUrl": "/docs/data_details/circle/#prototype-of-valid-format"
  },"8": {
    "doc": "Inputs - Details",
    "title": "Inputs: Details and effects on visualization",
    "content": "In accordance with json formatting rules, all keys and string values must be enclosed in double quotes, e.g., \"name\" or \"1ST SOURCE CORP\". ",
    "url": "/docs/data_details/data_details/#inputs-details-and-effects-on-visualization",
    
    "relUrl": "/docs/data_details/data_details/#inputs-details-and-effects-on-visualization"
  },"9": {
    "doc": "Inputs - Details",
    "title": "Inputs - Details",
    "content": " ",
    "url": "/docs/data_details/data_details/",
    
    "relUrl": "/docs/data_details/data_details/"
  },"10": {
    "doc": "Inputs - Overview",
    "title": "Inputs: Overview and terminology",
    "content": "The app requires three json input files, each made of a single array of objects. The objects themselves can only contain key-value pairs. The three json files must be located in the src/data folder: . ",
    "url": "/docs/data_overview/#inputs-overview-and-terminology",
    
    "relUrl": "/docs/data_overview/#inputs-overview-and-terminology"
  },"11": {
    "doc": "Inputs - Overview",
    "title": "circles.json",
    "content": "An array of objects containing a set of key-value pairs that represent the relevant data about the units that should be displayed in the visualization. The data is assumed to be in tidy format, i.e., each object in the array must represent a single unit in a single time period. Henceforth: . | An object in the circles.json array will often be referred to as a “row”, or an “observation”. | The term “unit” will be used to denote the group of rows belonging to the same observational agent (e.g., a firm, a political party,…) across time periods. | Beyond the required time-stamps, x-y coordinates, and unit identifiers, additional data about observations will be referred to as “features”. | . ",
    "url": "/docs/data_overview/#circlesjson",
    
    "relUrl": "/docs/data_overview/#circlesjson"
  },"12": {
    "doc": "Inputs - Overview",
    "title": "metadata.json",
    "content": "An array of objects containing a set of key-value pairs that provides additional information about: . | The types of some of the features included in circle.json, | How these features should be taken into account in the visualization, | How these features should be taken into account in the app’s UI. | . ",
    "url": "/docs/data_overview/#metadatajson",
    
    "relUrl": "/docs/data_overview/#metadatajson"
  },"13": {
    "doc": "Inputs - Overview",
    "title": "arrows.json",
    "content": "An array of objects containing a set of key-value pairs that represent the relevant data about the arrows that should be displayed in the visualization. The data is assumed to be in tidy format, i.e., each object in the array must represent a single arrow in a single time period. The file is required even if no arrows should be displayed in the visualization. To display no arrows, simply provide an empty array, i.e., []. ",
    "url": "/docs/data_overview/#arrowsjson",
    
    "relUrl": "/docs/data_overview/#arrowsjson"
  },"14": {
    "doc": "Inputs - Overview",
    "title": "Inputs - Overview",
    "content": " ",
    "url": "/docs/data_overview/",
    
    "relUrl": "/docs/data_overview/"
  },"15": {
    "doc": "Deploy online",
    "title": "Deploy online (Netlify)",
    "content": " ",
    "url": "/docs/deploy/#deploy-online-netlify",
    
    "relUrl": "/docs/deploy/#deploy-online-netlify"
  },"16": {
    "doc": "Deploy online",
    "title": "Existing turnkey deployement synced with Github repository",
    "content": ". | The app has already been deployed to a Netlify environment that is synced with the github repository https://github.com/EvoMapViz/EvoMapJS. | The deployment settings can be accessed at https://app.netlify.com/sites/lustrous-pixie-414f67/overview (login through Github with EvoMapViz account). | The deployed app can be accessed at https://lustrous-pixie-414f67.netlify.app/. | . ",
    "url": "/docs/deploy/#existing-turnkey-deployement-synced-with-github-repository",
    
    "relUrl": "/docs/deploy/#existing-turnkey-deployement-synced-with-github-repository"
  },"17": {
    "doc": "Deploy online",
    "title": "Redeploying the app from scratch on Netlify from Github repository",
    "content": ". | Copy https://github.com/EvoMapViz/EvoMapJS to a separate Github repository of your own. | Create a Netlify account and link it to your Github account. | Create a new site on Netlify and link it to your cloned version of https://github.com/EvoMapViz/EvoMapJS. | In your Netlify Sites settings/Build setting, set the build command to Build command CI=false npm run build (and the publish directory to build if that is not already the default). | In your Netlify site’s Sites settings/Environment variables, add a variable with key NPM_FLAGS and value --legacy-peer-deps. | . ",
    "url": "/docs/deploy/#redeploying-the-app-from-scratch-on-netlify-from-github-repository",
    
    "relUrl": "/docs/deploy/#redeploying-the-app-from-scratch-on-netlify-from-github-repository"
  },"18": {
    "doc": "Deploy online",
    "title": "Deploy online",
    "content": " ",
    "url": "/docs/deploy/",
    
    "relUrl": "/docs/deploy/"
  },"19": {
    "doc": "Quickstart",
    "title": "Quickstart",
    "content": "This tutorial provides a quick overview about the different tools available in EvoMapJS. To install the app locally: . | Clone the github repo. | Open the terminal and navigate inside the terminal to its local repository (cd local_path_of_githb_repo). | Run npm i (this will installs Node.js module dependencies for React). | Run npm start (the will starts the local server environment for the app). | The app should open automatically in your default browser. If it does not, open a browser and navigate to http://localhost:3000/. | . See https://evomapviz.github.io/EvoMapJS/docs/deploy/ for a guide on how to deploy the app online. ",
    "url": "/",
    
    "relUrl": "/"
  },"20": {
    "doc": "Quickstart",
    "title": "Background",
    "content": "Last updated: March 2023 . This quickstart guide is based on the following paper. If you use this package or parts of its code, please cite our work. References . [1] Matthe, M., Ringel, D. M., Skiera, B. (2022), “Mapping Market Structure Evolution”, Marketing Science, forthcoming. Read the full paper here (open access): https://doi.org/10.1287/mksc.2022.1385 . Contact: For questions or feedback, please get in touch. ",
    "url": "/#background",
    
    "relUrl": "/#background"
  },"21": {
    "doc": "metadata.json",
    "title": "metadata.json",
    "content": "The array must contain at least one object corresponding to a feature from circles.json, and must identify at least one of these features as “continuous”. ",
    "url": "/docs/data_details/metadata/",
    
    "relUrl": "/docs/data_details/metadata/"
  },"22": {
    "doc": "metadata.json",
    "title": "Key-value pairs (each row)",
    "content": "Required . name : The name of the feature. | Acceptable: Any string that matches the name of a feature in circles.json. | . label : The label of the feature as it should be displayed in the app’s UI. | Acceptable: Any string. | . Optional . type : The type of the feature. | Acceptable: \"continuous\", \"discrete\". | Default: \"discrete\". | Effect: . | \"continuous\": . | Feature appears in the “Size” selector menu of the app’s UI unless the tooltip key is set to \"only\". | Feature must be numerical in circle.json. | . | \"discrete\": . | Feature appears in the “Color” selector menu of the app’s UI unless the tooltip key is set to \"only\". | Feature will be treated as categorical (even if it is supplied in a numerical format in circle.json). | . | . | . tooltip : Whether the featyre should be included in the tooltip that appears when the user hovers over a circle. | Acceptable: \"true\", \"false\", \"only\". | Default: \"false\". | Effect: . | \"true\": . | The feature is included in the tooltip that appears when the user hovers over a circle. | . | false: . | The feature is not included in the tooltip that appears when the user hovers over a circle. | The feature is included in the relevant selector menu of the app’s UI (see type). | . | \"only\": . | The feature is included in the tooltip that appears when the user hovers over a circle. | The feature is not included in the relevant selector menu of the app’s UI (see type). | . | . | Note: The tooltip is calibrated to include at least one feature (on top of each circle’s name). If no features listed in metadata.json has tooltip set of \"true\" or \"only\", the dimensions of the tooltip will be slightly off. | . color_bins : How circles are binned into discrete categories when the feature is selected in the “Color” selector (e.g., \"color_bins\": [1,10,100,300,600] bins the feature based on whether its value is between its minimum value and 1, between 1 and 10, …, between 300 and 600, and between 600 and the feature’s maximum value). Only affects features with type “continuous”. | Acceptable: An array of numbers, e.g., [1,10,100,300,600]. | Default: The quintiles of the feature’s distribution (undefined for features with type “discrete”). | . size_legend_bins : Set of values of features with type “continuous” for which a bubble-size is displayed in the size-legend. | Acceptable: An array of numbers, e.g., [5, 100,300,600]. Only affects features with type “continuous”. | Default: 10%, 50%, and 100% quantiles of the feature’s distribution (undefined for features with type “discrete”). | . scale_increasing : Whether the feature’s values should be mapped to circle sizes in an increasing or decreasing manner. Only affects features with type “continuous”. | Acceptable: “true”, “false”. | Default: “true” for features with type “continous”, undefined for features with type “discrete”. | Effect: . | true: For features with type “continuous”, when the feature is selected through the “Size” selector, makes . | circle sizes proportional to the corresponding continuous feature. | the size Legend display from lower to higher values. proportional (“true”) or inversely proportional (“false”) to the corresponding continuous feature. | . | false: For features with type “continuous”, when the feature is selected through the “Size” selector, makes . | The size Legend is displayed from higher to lower values (“false”). | circle sizes inversely proportional to the corresponding continuous feature. | . | . | . scale_minSize : Lowest possible circle-size. | Acceptable: a single number. | Default: 1. | . scale_maxSize : Highest possible circle-size. | Acceptable: a single number. | Default: 50. | . scale_exponent : Curvature of the matching between the values of a feature identified as “continuous” and the corresponding circle-sizes. Only affects features with type “continuous”. | Acceptable: a single number. | Default: 1. | Effect: . | A value of 1 corresponds to a linear scale, i.e., all values of the feature between its min and max will be linearly recast to sizes between scale_minSize and scale_maxSize. | A value above 1 corresponds to a concave scale, i.e., starting from scale_minSize, sizes will first increase fast with the value of the feature, and then increase slower and slower as they approach scale_maxSize. | A value below 1 corresponds to a convex scale, i.e., starting from scale_minSize, sizes will first increase slowly with the value of the feature, and then increase faster and faster as they approach scale_maxSize. | . | . unit : The unit-sign appended whenever the value of a continuous feature is displayed, whether in legends or in tooltips. Only affects features with type “continuous”. | Acceptable: A string (\"B\", \"USD\", or \"$\"). | Default: empty string \"\" (no unit-sign appended). | . truncate_label : The number of characters after which the feature’s name label is truncated when displayed in the tooltip. | Acceptable: A single number. | Default: 9. | . truncate_value : The number of characters after which whether the value of the feature is truncated when displayed in the tooltip. | Acceptable: A single number. | Default: 6. | . legend_dline_extral : The base-length of the dashed line connecting bubble-sizes to their label in the size-legend. Only affects features with type “continuous”. | Acceptable: A single number. | Default: 10. | . ",
    "url": "/docs/data_details/metadata/#key-value-pairs-each-row",
    
    "relUrl": "/docs/data_details/metadata/#key-value-pairs-each-row"
  },"23": {
    "doc": "metadata.json",
    "title": "Prototype of valid format",
    "content": "[ {\"name\": \"cluster\", \"label\": \"Cluster Number\", \"type\": \"discrete\" }, {\"name\": \"mkvalt\", \"label\": \"Market Value\", \"type\": \"continuous\", \"tooltip\" : \"true\" } ] . For a full example of the data format, see https://github.com/EvoMapViz/EvoMapJS/blob/main/src/data/metadata_TEMPLATE_DO_NOT_ERASE.json in this repository. | This is a reference template that should not be erased. You should copy it, rename it to metadata.json, and experiment editing the latter with your own data (you can always revert to the template if you break the data format and want a fresh start). | src/data/metadata_TEMPLATE_DO_NOT_ERASE.json is made to work with src/data/circles_TEMPLATE_DO_NOT_ERASE.json. | . ",
    "url": "/docs/data_details/metadata/#prototype-of-valid-format",
    
    "relUrl": "/docs/data_details/metadata/#prototype-of-valid-format"
  },"24": {
    "doc": "Update input data",
    "title": "Updating process for circle.json, metadata.json, and arrows.json",
    "content": " ",
    "url": "/docs/update/#updating-process-for-circlejson-metadatajson-and-arrowsjson",
    
    "relUrl": "/docs/update/#updating-process-for-circlejson-metadatajson-and-arrowsjson"
  },"25": {
    "doc": "Update input data",
    "title": "Netlify",
    "content": "Existing turnkey deployement synced with Github repository. | Clone the https://github.com/EvoMapViz/EvoMapJS. | Edit circle.json, metadata.json, or arrows.json locally in the src/data folder. | Commit your changes using git and push them to the Github repository. | The https://lustrous-pixie-414f67.netlify.app/ app should automatically update on Netlify (pending about a minute for the build process to complete). | . App redeployed from scratch on Netlify from Github repository. | Clone your github copy of the https://github.com/EvoMapViz/EvoMapJS repo. | Edit circle.json, metadata.json, or arrows.json locally in the src/data folder. | Commit your changes using git and push them to the Github repository. | The Netlify app you synced with your personal copy of the repo should automatically update on Netlify (pending about a minute for the build process to complete). | . ",
    "url": "/docs/update/#netlify",
    
    "relUrl": "/docs/update/#netlify"
  },"26": {
    "doc": "Update input data",
    "title": "Local",
    "content": ". | After running npm start (starts the local server environment for the app), edit circle.json, metadata.json, or arrows.json locally in the src/data folder. | After you save your updates locally, the local deployment of your app at http://localhost:3000/ should automatically update in your browser. | . ",
    "url": "/docs/update/#local",
    
    "relUrl": "/docs/update/#local"
  },"27": {
    "doc": "Update input data",
    "title": "Update input data",
    "content": " ",
    "url": "/docs/update/",
    
    "relUrl": "/docs/update/"
  }
}
